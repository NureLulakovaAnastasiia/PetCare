@inject IJSRuntime JSRuntime
@inject IAuthorizationService _authService
@inject IUserService _userService
@inject NavigationManager Navigation
@using Syncfusion.Blazor.SplitButtons

<nav class="navbar bg-body d-flex ">
    <div class="flex-row">
        <p class=" mx-5 brand-logo">PetCare</p>
    </div>
    <ul class="navbar-nav  flex-row-reverse align-content-center">
        @if (isLogged)
        {
            <li class="nav-item p-0 mx-4">
                <button class="nav-link nav-link-big bell-btn"  @onclick="ToggleHistory">
                    <i class="bi bi-bell-fill"></i>
                    @if (eventsHistory.Count > 0)
                    {
                        <span class="badge">@eventsHistory.Count</span>
                    }
                </button>
            </li>

            @if (isHistoryShowed)
            {
                <_EventsHistoryList IsShowed="isHistoryShowed" OnClose="ToggleHistory" />
            }
        }

        
        <li class="nav-item p-0 mx-4">
            <a class="nav-link nav-link-big" href="" Match="NavLinkMatch.All">
                Home
            </a>
        </li>

        <li class="nav-item  p-0  mx-4">
            <a class="nav-link nav-link-big" href="search">
                Search
            </a>
        </li>
        @if (!isLogged)
        {
            <li class="nav-item  p-0 mx-4">
                <a class="nav-link nav-link-big" href="login">
                Login
            </a>
        </li>
        }else{

            <li class="nav-item  p-1 mx-3">
            @* <a class="nav-link" href="account">
                Account
            </a> *@
                <SfDropDownButton Content="Account">
                <DropDownButtonEvents  ItemSelected="SelectItem" >
                </DropDownButtonEvents>
                <DropDownMenuItems>
                    <DropDownMenuItem Text="Profile" Id="Profile"></DropDownMenuItem>
                    <DropDownMenuItem Text="Log Out" Id="LogOut"></DropDownMenuItem>
                </DropDownMenuItems>
            </SfDropDownButton>
        </li>
        }
    </ul>
</nav>

@code{
    [Parameter]
    public bool isLogged { get; set; } = false;

    public string? ErrorMessage { get; set; }

    public bool isHistoryShowed = false;

    public List<HistoryEvent> eventsHistory { get; set; } = new List<HistoryEvent>();

    public Task UpdateNavMenuAsync(bool isAuthenticated)
    {
        isLogged = isAuthenticated;
        StateHasChanged(); 
        return Task.CompletedTask;
    }

    public async Task SelectItem(MenuEventArgs args)
    {
        if (args.Item.Id == "LogOut")
        {
            var res = await _authService.Logout();
            if (String.IsNullOrEmpty(res))
            {
                isLogged = false;
                StateHasChanged();
                Navigation.NavigateTo("/login");
            }
        }
        else if (args.Item.Id == "Profile")
        {
            Navigation.NavigateTo("/account");
        }
    }

   

    public void ToggleHistory()
    {
        isHistoryShowed = !isHistoryShowed;
        StateHasChanged();

    }
}

<style>
    .e-dropdown-btn {
        font-size: 2rem !important;
        font-weight: var(--bs-nav-link-font-weight) !important;
        color: var(--bs-nav-link-color) !important;
        text-decoration: none;
        background: rgba(255, 255, 255, .3) !important;
        padding-top: 2px;
        border: 0 !important;
        box-shadow: none !important;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
        font-family: var(--bs-body-font-family) !important;
    }

        .e-dropdown-btn:hover, .e-dropdown-btn.e-active {
            color: var(--bs-nav-link-hover-color) !important;
            background: none;
            border: none;
            background-color: rgba(255, 255, 255, .3) !important;
        }

    .e-dropdown-popup ul .e-item:active{
        outline: 0;
        font-family: var(--bs-body-font-family) !important;
        background: none !important;
    }

   .e-dropdown-menu{
       min-width: 160px !important;
   }


    .e-dropdown-popup {
        background-color: rgba(255, 255, 255, .8) !important;
        
        box-shadow: 0px 0px 5px var(--bs-nav-link-hover-color) !important;
        color: #015A84;
        font-family: var(--bs-body-font-family) !important;
    }

        .e-dropdown-popup ul .e-item{
            font-size: 1.3rem !important;
            font-weight: 500;
            height: 50px;
            justify-content: center;
            align-items: center;
        }

        .e-dropdown-popup ul .e-item:hover{
                background-color: rgba(241, 237, 234, .8) !important;
                color: rgb(3, 62, 89);
        }





    .history-overlay {
        position: fixed;
        top: 0;
        right: 0;
        width: 100vw;
        height: 100vh;
/*         background: rgba(0, 0, 0, 0.3);
 */        display: flex;
        justify-content: flex-end;
        z-index: 1000;
    }

    .history-panel {
        width: 350px;
        height: 100vh;
        background: rgba(255, 255, 255, 0.6);
        backdrop-filter: blur(10px);
        border-left: 2px solid rgba(0, 0, 0, 0.2);
        padding: 10px;
        display: flex;
        flex-direction: column;
        box-shadow: -3px 0 10px rgba(0, 0, 0, 0.2);
    }

    .history-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1.2rem;
        font-weight: bold;
        padding: 10px;
    }

    .history-content {
        flex: 1;
        overflow-y: auto;
        padding: 10px;
    }

        .history-content ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .history-content li {
            padding: 8px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

    .close-btn {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: var(--bs-secondary);
    }

    .bell-btn {
        background: none;
        border: none;
        font-size: 1.8rem;
        cursor: pointer;
        position: relative;
    }

   

</style>


