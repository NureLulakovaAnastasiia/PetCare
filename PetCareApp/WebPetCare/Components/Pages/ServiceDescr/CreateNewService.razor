@page "/create-service"
@inject NavigationManager Navigation
@inject IServiceService service
@inject IJSRuntime _JSRuntime


<div class="d-flex justify-content-center">
    <div class="col-lg-10 align-items-center">
        <div class="form-custom-border bg-body-secondary p-3 ">
            <div class="row text-center">
                <button type="button" class="btn col-2 m-1 p-0 btn-func-danger" style="height: 3em" @onclick="Back">
                    <i class="bi bi-arrow-left"></i>   Back
                </button>

                @if (isServiceCreation){
                <div class="col-6 offset-2">
                    <h3 ><b>Service Creation</b></h3>
                    <p >Fill form with info about service</p>
                </div>
                }
                else if (isQuestionaryCreation)
                {
                    <div class="col-6 offset-2">
                        <h3><b>Questionary Creation</b></h3>
                        <p>Create questionary or skip this step</p>
                    </div>
                }
            </div>
            <hr />
            @if (isServiceCreation)
            {
                <_AddService serviceDto="@serviceDto" OnFinishCreation="ChangeStageOfCreation"></_AddService>
            }
            else if (isQuestionaryCreation)
            {
                <_AddQuestionary questions="@questions" returnToServiceCreate="ChangeStageOfCreation" submitServiceCreation="SubmitServiceCreation"></_AddQuestionary>
            }

        </div>
    </div>
</div>



@code {
    public AddServiceDto serviceDto { get; set; } = new AddServiceDto();
    public bool isServiceCreation = true;
    public List<AddQuestionDto> questions = new List<AddQuestionDto>();
    public bool isQuestionaryCreation = false;

    public void ChangeStageOfCreation()
    {
        isServiceCreation = !isServiceCreation;
        isQuestionaryCreation = !isQuestionaryCreation;
        StateHasChanged();
    }

    public async Task SubmitServiceCreation()
    {
        var res = await service.AddService(serviceDto, questions);
        if (String.IsNullOrEmpty(res))
        {
            await _JSRuntime.InvokeVoidAsync("toastrInterop.showSuccess", "Service was added successfully!", "Success");
            Navigation.NavigateTo("/account");
        }else if(res.Equals("Unauthorized"))
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            await _JSRuntime.InvokeVoidAsync("toastrInterop.showError", res, "Error");

        }
    }

    private void Back()
    {
        Navigation.NavigateTo("javascript:history.back()");
    }
}
