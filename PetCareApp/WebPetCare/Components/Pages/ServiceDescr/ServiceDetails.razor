@page "/service-id={serviceId:int}"
@using Microsoft.AspNetCore.Components.Authorization
@inject IServiceService _service
@inject IJSRuntime _JSRuntime

@if(String.IsNullOrEmpty(role) || role == "User"){
    <_ServiceGeneralInfoUser serviceDto="@serviceDto" role="@role"></_ServiceGeneralInfoUser>
}else{
    <_ServiceGeneralInfo serviceDto="@serviceDto"></_ServiceGeneralInfo>
}


@code {
    [Parameter]
    public int serviceId { get; set; }

    [Parameter]
    public GetServiceDto? serviceDto { get; set; }

    private string? role = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (serviceDto == null)
            {
                var res = await _service.getServiceDetails(serviceId);
                if (res.IsSuccess)
                {
                    serviceDto = res.Data;
                }
                else
                {
                    await _JSRuntime.InvokeVoidAsync("toastrInterop.showError", res.ErrorMessage, "Error");

                }

                role = await _service.GetCurrentUserRole();
                StateHasChanged();
            }
        }
    }

   
}
