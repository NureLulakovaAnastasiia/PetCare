@page "/master/{masterId}"
@using WebPetCare.IServices
@using WebPetCare.Components.Pages.Account
@using LabelPosition = Syncfusion.Blazor.Inputs.LabelPosition
@inject IUserService userService
@inject NavigationManager Navigation
@inject IStringLocalizer<Resources.Search> Localizer

<div class="d-flex justify-content-center">
    <div class="col-lg-10 align-items-center text-center ">
        <div class="form-custom-border p-3 mb-5">
            @if (!String.IsNullOrEmpty(masterData.Id))
            {
                <div class="row">
                    <div class="col-lg-4 ms-4">
                        <div>
                        @if (masterData.Photo != null && masterData.Photo.Length > 0)
                        {
                            var base64Image = $"data:image/jpeg;base64,{Convert.ToBase64String(masterData.Photo)}";
                            <img src="@base64Image" class="fixed-image" alt="Master Image" />
                        }
                        else
                        {
                            <div class="card-body text-center">
                                <p>@Localizer["No image available"]</p>
                            </div>
                        }
                        </div>
                        <div class="row align-items-center">
                            <div>
                                <SfRating CssClass="col-10" @bind-Value=@masterData.Rate ShowLabel=true ShowTooltip="false" LabelPosition="LabelPosition.Left" Disabled="true">
                                    <FullTemplate>
                                        <img src=@fullTemplateImage style="max-width:30px; max-height:30px;" />
                                    </FullTemplate>
                                    <EmptyTemplate>
                                        <img src=@emptyTemplateImage style="max-width:30px; max-height:30px;" />
                                    </EmptyTemplate>
                                    <LabelTemplate ><strong>@Localizer["Rate"]:</strong> @context+</LabelTemplate>
                                </SfRating>
                            </div>
                        </div>
                    </div>

                    <div class="col-7">
                        <div class="mb-3">
                            <h2>@masterData.LastName   @masterData.FirstName</h2>
                            <hr/>

                        </div>
                        @if (masterData.OrgId != null)
                        {
                            <div class="col-8 offset-2">
                                <label class="">@Localizer["Organization"] </label>
                                <h4 class="green-blue-text"><NavLink @onclick="GoToOrgPage" class=" nav-link nav-link-underline ">@masterData.OrgName</NavLink></h4>
                            </div>
                        }
                        
                            <div class="col-8 offset-2">
                                <label>@Localizer["Address"]</label>
                            <h4 class="green-blue-text">@masterData.Contacts.Address</h4>
                            </div>
                            <div class="">
                                <label>@Localizer["Phone"]</label>
                            <h4 class="green-blue-text">@masterData.Contacts.Phone</h4>
                            </div>
                        
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<div class="row col-9 offset-2 mb-3 ">
    <button class="btn col-lg-2 me-3 btn-nav@(options == MasterDataOptions.Schedule ? "-active" : "")" @onclick="() => ChangePage(MasterDataOptions.Schedule)">@Localizer["Schedule"]</button>
    <button class="btn col-lg-2 me-3 btn-nav@(options == MasterDataOptions.Map ? "-active" : "")" @onclick="() => ChangePage(MasterDataOptions.Map)">@Localizer["Map"]</button>
    <button class="btn col-lg-2 me-3 btn-nav@(options == MasterDataOptions.Services ? "-active" : "")" @onclick="() => ChangePage(MasterDataOptions.Services)">@Localizer["Services"]</button>
    <button class="btn col-lg-2 me-3 btn-nav@(options == MasterDataOptions.Reviews ? "-active" : "")" @onclick="() => ChangePage(MasterDataOptions.Reviews)">@Localizer["Reviews"]</button>
    <button class="btn col-lg-2 me-3 btn-nav@(options == MasterDataOptions.Portfolio ? "-active" : "")" @onclick="() => ChangePage(MasterDataOptions.Portfolio)">@Localizer["Portfolio"]</button>
</div>

@switch (options)
{
    case MasterDataOptions.Schedule:
        <_MasterSchedule schedule="@masterData.Schedules"></_MasterSchedule>
        break;
    case MasterDataOptions.Portfolio:
        <_MasterPortfolio PortfolioDtos="@masterData.Portfolios"></_MasterPortfolio>
        break;
    case MasterDataOptions.Map:
        <_PlaceOnMap location="@masterData.Contacts.Location"></_PlaceOnMap>
        break;
    case MasterDataOptions.Services:
        <_AllMasterServices masterId="@masterId"></_AllMasterServices>
        break;

    case MasterDataOptions.Reviews:
        <_MasterServiceReviews masterId="@masterId"></_MasterServiceReviews>
        break;

}


@code {
    [Parameter]
    public string masterId { get; set; }
    public MasterDto masterData = new MasterDto();
    private MasterDataOptions options = MasterDataOptions.Services;
    private string fullTemplateImage = "Images/star-fill.svg";
    private string emptyTemplateImage = "Images/star.svg";

    protected override async Task OnParametersSetAsync()
    {
        if (!String.IsNullOrEmpty(masterId))
        {
            var res = await userService.GetMasterData(masterId);
            if (res.IsSuccess)
            {
                masterData = res.Data;
            }
        }

    }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
        }
    }
    public void ChangePage(MasterDataOptions option)
    {
        options = option;
        StateHasChanged();
    }

    private void GoToOrgPage()
    {
        Navigation.NavigateTo($"/organization/{masterData.OrgId}");
    }

    public enum MasterDataOptions
    {
        Schedule, Map, Services, Reviews, Portfolio
    }
}

<style>
    .e-rating-container .e-rating-label {
        font-size: 20px;
        line-height: 50px;
        align-self: center;
        margin-top: 10px;
    }

    .e-rating-container{
        justify-content: center;
        align-items: center;
    }
</style>
