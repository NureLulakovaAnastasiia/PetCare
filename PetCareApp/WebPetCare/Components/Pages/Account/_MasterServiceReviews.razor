@inject IUserService userService
@inject IServiceService serviceService


<div class="d-flex justify-content-center mt-2">
    <div class="col-lg-10 align-items-center text-center ">
        <div class="form-custom-border bg-body-secondary p-3 align-content-center">
            <div class="row col-10 offset-1">
                <h2>Reviews</h2>
                @foreach (var item in reviews)
                {
                    <div class="main-review p-2 m-1 text-start ">
                        <div class="row align-items-center">
                            <h4 class="col-3">@item.AppUserName</h4>

                            <SfRating Value=item.Rate Disabled="true" CssClass="col-2 text-start">
                                <FullTemplate>
                                    <img src=@fullTemplateImage widht="14" height="14" />
                                </FullTemplate>
                                <EmptyTemplate>
                                    <img src=@emptyTemplateImage widht="14" height="14" />
                                </EmptyTemplate>
                                <LabelTemplate>@context+</LabelTemplate>
                            </SfRating>
                        </div>
                        <p>@item.Text</p>
                    </div>
                    @if (item.Comments != null && item.Comments.Count > 0)
                    {
                        <div class="row text-start">
                            <div class="offset-2">
                                @foreach (var comment in item.Comments)
                                {
                                    <div class="col-8 review-comment p-2 m-2">
                                        <h4 class="">@comment.AppUserName</h4>
                                        <p>@comment.Text</p>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                @if(reviews == null || reviews.Count == 0)
                {
                    <h3>There is no reviews</h3>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? masterId { get; set; }
    [Parameter]
    public int? serviceId { get; set; }
    public List<ReviewDto> reviews = new List<ReviewDto>();
    private string fullTemplateImage = "Images/star-fill.svg";
    private string emptyTemplateImage = "Images/star.svg";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (masterId != null)
            {
                var res = await userService.GetMasterReviews(masterId);
                if (res.IsSuccess)
                {
                    reviews = res.Data;
                }
            }
            else if (serviceId != null)
            {
                var res = await serviceService.GetReviews((int)serviceId);
                if (res.Count > 0)
                {
                    reviews = res;
                }
                else
                {

                }
            }
            StateHasChanged();
        }
    }
}
