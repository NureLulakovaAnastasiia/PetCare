@page "/account"
@using WebPetCare.IServices
@inject IUserService userService
@inject NavigationManager Navigation

<PageTitle>Account</PageTitle>

<div class="container align-items-center">
    @if (role == "Master")
    {

        <div class="col-1"></div>
        <div class="row col-9 offset-2 mb-3 ">
            <button class="btn col-lg-2 me-3  btn-nav@(options == menuOptions.General ? "-active" : "")" @onclick="() => ChangePage(menuOptions.General)">General</button>
            <button class="btn col-lg-2 me-3 btn-nav@(options == menuOptions.Calendar ? "-active" : "")" @onclick="() => ChangePage(menuOptions.Calendar)">Calendar</button>
            <button class="btn col-lg-2 me-3 btn-nav@(options == menuOptions.Services ? "-active" : "")" @onclick="() => ChangePage(menuOptions.Services)">My services</button>
            <button class="btn col-lg-2 me-3 btn-nav@(options == menuOptions.Reviews ? "-active" : "")" @onclick="() => ChangePage(menuOptions.Reviews)">Reviews</button>
            <button class="btn col-lg-2 me-3 btn-nav@(options == menuOptions.Portfolio ? "-active" : "")" @onclick="() => ChangePage(menuOptions.Portfolio)">Portfolio</button>

        </div>

        @switch (options)
        {
            case menuOptions.Calendar:
                <Calendar></Calendar>
                break;
            case menuOptions.Portfolio:
                <Portfolio></Portfolio>
                break;
            case menuOptions.Services:
                <_AllMasterServices></_AllMasterServices>
                break;

            case menuOptions.Reviews:
                <_MasterServiceReviews masterId="" serviceId="@(null)"></_MasterServiceReviews>
                break;

            case menuOptions.General:
                <_GeneralAccount masterData="masterData"></_GeneralAccount>
                <_MyServicesGeneral services="@masterData.Services"></_MyServicesGeneral>
                <_PetsList Pets="@masterData.Pets"></_PetsList>
                <_UserRecords></_UserRecords>
                break;
        }

    }
    else if (role == "User")
    {
        <_GeneralAccount masterData="masterData"></_GeneralAccount>
        <_PetsList Pets="@masterData.Pets"></_PetsList>
        <_UserRecords></_UserRecords>
    }

    
</div>


@code {
    public GetGeneralMasterDto masterData { get; set; } = new GetGeneralMasterDto();
    private string? role = "";

    public string Error { get; set; } = "";
    private menuOptions options = menuOptions.General;

    public enum menuOptions
    {
        General, Calendar, Services, Reviews, Portfolio
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            var res = await userService.getGeneralMasterData();
            if (res.IsSuccess)
            {
                masterData = res.Data;
            }
            else
            {
                Error = res.ErrorMessage;
            }
            role = await userService.GetCurrentUserRole();
            if (String.IsNullOrEmpty(role))
            {
                Navigation.NavigateTo("/login");
            }
            StateHasChanged();
        }
    }

    public void ChangePage(menuOptions option)
    {
        options = option;
        StateHasChanged();
    }
}
