@inject IUserService userService
@inject IJSRuntime _JSRuntime

<div class="d-flex justify-content-center">
    <div class="col-lg-10 align-items-center text-center ">
        <div class="form-custom-border bg-body-secondary p-3 ">
                @if (!IsEdit)
                {
                    <div class="row text-center">
                        <h3 class="col-8 offset-2"><b>About me</b></h3>
                        <button class="btn col-2 btn-func" @onclick="OnButtonClick"><i class="bi bi-pencil-fill"></i>   Edit</button>
                    </div>
                }

            <form method="post" @onsubmit="UpdateMasterData">
                @if (IsEdit)
                {
                    <div class="row text-center">
                        <h3 class="col-6 offset-3"><b>About me</b></h3>
                        <button type="button" class="btn col-2 mx-1 btn-func-danger" @onclick="CancelEdit">Cancel</button>
                        <button type="submit" class="btn col-2 btn-func-success" >Save</button>
                    </div>
                }
           
                <hr />
            
                <div class="text-start">
                    @if(masterData != null){
                    <div class="row col-lg-12 m-3">
                        <div class="col-4 ms-4 mb-4 me-5">
                            <h4>Last Name</h4>
                            <InputText @bind-Value="masterData.LastName" placeholder="@masterData.LastName" 
                            class="input-text-style" disabled="@(!IsEdit)" />
                        </div>

                        <div class="col-4 ms-4 mb-4 me-5">
                            <h4>First Name</h4>
                            <InputText @bind-Value="masterData.FirstName" placeholder="@masterData.FirstName"
                                        class="input-text-style" disabled="@(!IsEdit)" />
                        </div>
                    </div>

                    <div class="row col-lg-12 m-3">
                        <div class="col-4 ms-4 mb-4 me-5">
                            <h4>Location</h4>
                            <h3>@(masterData.Contacts.City + ", " + masterData.Contacts.Address)</h3>
                                @if (IsEdit)
                                {
                                    <button type="button" class="btn btn-func-success" @onclick="OpenModal">Edit</button>
                                }
                            </div>
                            @if (IsModalOpen)
                            {
                                        <div>
                                            <span class="close" @onclick="CloseModal">&times;</span>
                                            <h2>Edit location</h2>
                                        </div>
                                        <_EditLocation Contacts="@masterData.Contacts"
                                        CloseAndSubmit="CloseModal">
                                        </_EditLocation>
                            }
                    </div>

                    <div class="row col-lg-12 m-3">
                        <div class="col-4 ms-4 mb-4 me-5">
                            <h4>Phone</h4>
                            <InputText @bind-Value="masterData.Contacts.Phone"
                                        placeholder="@(masterData.Contacts.Phone != null ? masterData.Contacts.Phone : " - ")"
                                        class="input-text-style" disabled="@(!IsEdit)" />
                        </div>

                        <div class="col-5 ms-4 mb-4 me-5">
                            <h4>Email</h4>
                            <InputText @bind-Value="masterData.Email"
                                        placeholder="@masterData.Email"
                                        class="input-text-style" disabled />
                        </div>
                    </div>
                    }else{
                        <h3>There is no data to display</h3>
                    }
                </div>
            </form>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public GetGeneralMasterDto masterData { get; set; } = new GetGeneralMasterDto();
    private GetGeneralMasterDto initialMasterData { get; set; } = new GetGeneralMasterDto();
    public bool IsEdit = false;
    private bool IsModalOpen = false;

    private void OnButtonClick()
    {
        IsEdit = !IsEdit;
        FillInitialData();
    }


    private void CancelEdit()
    {
        masterData.FirstName = initialMasterData.FirstName;
        masterData.LastName = initialMasterData.LastName;
        masterData.Contacts = initialMasterData.Contacts;
        OnButtonClick();
    }

    private async void UpdateMasterData()
    {
        var res = await userService.UpdateGeneralMasterData(masterData);
        if (String.IsNullOrEmpty(res))
        {
            //await _JSRuntime.InvokeVoidAsync("showToastr", "success", "Data updated and saved successfully!");
            await _JSRuntime.InvokeVoidAsync("toastrInterop.showSuccess", "Data updated and saved successfully!", "Success");
            OnButtonClick();
            StateHasChanged();
        }
        else
        {
            await _JSRuntime.InvokeVoidAsync("toastrInterop.showError", res, "Error");

        }
    }

    private void FillInitialData()
    {
        initialMasterData = new GetGeneralMasterDto(masterData);
        initialMasterData.Contacts = new ContactsDto(masterData.Contacts);
    }

    private void OpenModal()
    {
        IsModalOpen = true;
    }

    private void CloseModal()
    {
        IsModalOpen = false;
        Console.WriteLine(masterData);
        StateHasChanged();
    }
    private void AddLocation(MouseEventArgs e)
    {
        
    }
}
