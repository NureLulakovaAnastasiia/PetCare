<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="(+/- format)" xml:space="preserve">
    <value>(+/- формат)</value>
  </data>
  <data name="(fixed)" xml:space="preserve">
    <value>(фіксоване)</value>
  </data>
  <data name="Add Answer" xml:space="preserve">
    <value>Додати відповідь</value>
  </data>
  <data name="Add Question" xml:space="preserve">
    <value>Додати питання</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Відповідь</value>
  </data>
  <data name="Answer image" xml:space="preserve">
    <value>Фото відповіді</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Записатися</value>
  </data>
  <data name="Are you sure you want to submit?" xml:space="preserve">
    <value>Ви впевнені, що хочете видалити опитування?</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Скасувати</value>
  </data>
  <data name="Create questionary or skip this step" xml:space="preserve">
    <value>Створити опитування або пропустити цей етап</value>
  </data>
  <data name="Data updated and saved successfully!" xml:space="preserve">
    <value>Дані успішно оновлено</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Видалити</value>
  </data>
  <data name="Delete Question" xml:space="preserve">
    <value>Видалити питання</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Опис</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Змінити</value>
  </data>
  <data name="Fill form with info about service" xml:space="preserve">
    <value>Заповніть форму даними про сервіс</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Приховати</value>
  </data>
  <data name="Is Time Fixed" xml:space="preserve">
    <value>Чи фіксований час</value>
  </data>
  <data name="Maximum Price" xml:space="preserve">
    <value>Максимальна ціна</value>
  </data>
  <data name="Maximum Time" xml:space="preserve">
    <value>Максимальний час</value>
  </data>
  <data name="min" xml:space="preserve">
    <value>хв</value>
  </data>
  <data name="Minimum Price" xml:space="preserve">
    <value>Мінімальна ціна</value>
  </data>
  <data name="Minimum Time" xml:space="preserve">
    <value>Мінімальний час</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Назва</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Далі</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Ні</value>
  </data>
  <data name="No name" xml:space="preserve">
    <value>Немає назви</value>
  </data>
  <data name="Question Text" xml:space="preserve">
    <value>Текст питання</value>
  </data>
  <data name="Questionary" xml:space="preserve">
    <value>Опитування</value>
  </data>
  <data name="Questionary Creation" xml:space="preserve">
    <value>Створення опитування</value>
  </data>
  <data name="Questionary Modification" xml:space="preserve">
    <value>Редагування опитування</value>
  </data>
  <data name="Questionary was deleted successfully!" xml:space="preserve">
    <value>Оитування було видалено</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Рейтинг</value>
  </data>
  <data name="Remove questionary" xml:space="preserve">
    <value>Видалити опитування</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Зберегти</value>
  </data>
  <data name="Service become hidden!" xml:space="preserve">
    <value>Сервіс став прихованим</value>
  </data>
  <data name="Service Creation" xml:space="preserve">
    <value>Створення сервісу</value>
  </data>
  <data name="Service Details" xml:space="preserve">
    <value>Деталі сервісу</value>
  </data>
  <data name="Service is now shown!" xml:space="preserve">
    <value>Сервіс став доступним</value>
  </data>
  <data name="Service provider" xml:space="preserve">
    <value>Надавач послуг</value>
  </data>
  <data name="Service was deleted successfully!" xml:space="preserve">
    <value>Сервіс було успішно видалено</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Показати</value>
  </data>
  <data name="SignInToApply" xml:space="preserve">
    <value>Для запису вам необхідно авторизуватися</value>
  </data>
  <data name="Skip questionary creation" xml:space="preserve">
    <value>Пропустити створення опитування</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Успіх</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Теги</value>
  </data>
  <data name="There is no data to display" xml:space="preserve">
    <value>Немає даних для відображення</value>
  </data>
  <data name="There is no such service" xml:space="preserve">
    <value>Такого сервісу не знайдено</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Час</value>
  </data>
  <data name="Time, min" xml:space="preserve">
    <value>Час, хв</value>
  </data>
  <data name="To previous step" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Update or remove questionary" xml:space="preserve">
    <value>Оновлення або видалення опитування</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Так</value>
  </data>
</root>