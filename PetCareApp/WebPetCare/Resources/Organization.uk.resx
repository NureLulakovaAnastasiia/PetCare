<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Прийняти</value>
  </data>
  <data name="Accept request" xml:space="preserve">
    <value>Прийняти запит</value>
  </data>
  <data name="Acceptance Date" xml:space="preserve">
    <value>Дата прийняття</value>
  </data>
  <data name="Accepted" xml:space="preserve">
    <value>Прийнятий</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Додати</value>
  </data>
  <data name="Add portfolio" xml:space="preserve">
    <value>Додати блоки у портфоліо</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Адреса</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Скасувати</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Обрати</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Опис</value>
  </data>
  <data name="Dismiss" xml:space="preserve">
    <value>Звільнити</value>
  </data>
  <data name="Dismissal Date" xml:space="preserve">
    <value>Дата звільнення</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Змінити</value>
  </data>
  <data name="Employee was dismissed" xml:space="preserve">
    <value>Робітника було звільнено</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Працівники</value>
  </data>
  <data name="Error during getting data" xml:space="preserve">
    <value>Помилка під час отримання даних</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Фільтрувати</value>
  </data>
  <data name="Filter by status" xml:space="preserve">
    <value>Фільтр за статусом</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Завершити</value>
  </data>
  <data name="Fire employee" xml:space="preserve">
    <value>Звільнити робітника</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Від</value>
  </data>
  <data name="Item was succefully removed" xml:space="preserve">
    <value>Блок було успішно видалено</value>
  </data>
  <data name="Make request" xml:space="preserve">
    <value>Зробити запит</value>
  </data>
  <data name="My portfolio" xml:space="preserve">
    <value>Моє портфоліо</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Новий</value>
  </data>
  <data name="No data was found" xml:space="preserve">
    <value>Даних не було знайдено</value>
  </data>
  <data name="No employees were found" xml:space="preserve">
    <value>Робітників не було знайдено</value>
  </data>
  <data name="No image available" xml:space="preserve">
    <value>Фото недоступно</value>
  </data>
  <data name="No requests were found" xml:space="preserve">
    <value>Запитів не знайдено</value>
  </data>
  <data name="NoPlaceOnMap" xml:space="preserve">
    <value>Неможливо знайти мфсце на мапі</value>
  </data>
  <data name="On map" xml:space="preserve">
    <value>На мапі</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Організація</value>
  </data>
  <data name="PartOfOrg" xml:space="preserve">
    <value>Ви вже є частиною цієї організації</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="Portfolio" xml:space="preserve">
    <value>Портфоліо</value>
  </data>
  <data name="Portfolio Image" xml:space="preserve">
    <value>Фото портфоліо</value>
  </data>
  <data name="Portfolio is not available or empty" xml:space="preserve">
    <value>Портфоліо недоступне</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Відхилити</value>
  </data>
  <data name="Reject request" xml:space="preserve">
    <value>Видхилити запит</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Відхилений</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Запит</value>
  </data>
  <data name="Request was succefully accepted" xml:space="preserve">
    <value>Запит було успішно прийнято</value>
  </data>
  <data name="Request was succefully rejected" xml:space="preserve">
    <value>Запит було відхилено.</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Запити</value>
  </data>
  <data name="RequestToOrg" xml:space="preserve">
    <value>Make request to organization</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Роклад</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Сервіси</value>
  </data>
  <data name="Sort by date" xml:space="preserve">
    <value>Сортувати за датою</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="SureAcceptRequest" xml:space="preserve">
    <value>Ви впевнені, що хочете прийняти запит?</value>
  </data>
  <data name="SureDismissEmployee" xml:space="preserve">
    <value>Ви впевнені, що хочете звільнити цього робітника?</value>
  </data>
  <data name="SureRejectRequest" xml:space="preserve">
    <value>Ви впевнені, що хочете відхилити запит?</value>
  </data>
  <data name="SureRequestToOrg" xml:space="preserve">
    <value>Ви впевнені, що хочете зробити запит до цієї організації?</value>
  </data>
  <data name="There is no such organization" xml:space="preserve">
    <value>Організації не знайдено</value>
  </data>
  <data name="You have succesfully made a request" xml:space="preserve">
    <value>Ви успішно подали запит до організації</value>
  </data>
  <data name="You haven't chosen items to add" xml:space="preserve">
    <value>Ви не обрали блоки</value>
  </data>
</root>